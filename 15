__author__ = 'Home'
def digraph_from_input():
    M=int(input())
    digraph={}
    for i in range(M):
        a,b =input().split( )
        if a in digraph:
            digraph[a].add(b)
        if not a in digraph:
            digraph[a]=set()
            digraph[a].add(b)
        if b in digraph:
            digraph[b].add(a)
        if b not in digraph:
            digraph[b]=set()
            digraph[b].add(a)

    return digraph
def check_a_b(G,a,b):
    if b in G[a]:
        return False

    return True
def square_G(G):
    fire=set()
    square={}
    for V in G:
        for U in G:
            if  U!=G :
              if ((V,U) not in fire):
                resalt_1=check_a_b(G,U,V)

                if resalt_1:
                    if V in square:
                        square[V].add(U)
                    else:
                        square[V]=set()
                        square[V].add(U)

                if resalt_1:
                    if U in square:
                        square[U].add(V)
                    else:
                        square[U]=set()
                        square[U].add(V)

                fire.add((U,V))
                fire.add((V,U))

    for V in G:
            if V not in square:
                square[V]=set()
    for u in square:
        square[u].discard(u)
    return square
def pprint(digraph):
    dig=[]
    for g in digraph:
       dig.append(g)
    dig.sort()
    for i in range(len(dig)-1):
      if i==0 :
        print('{',"'",dig[i],"'",': ',digraph[dig[i]],',',sep='')

      else:
        print(' ',"'",dig[i],"'",': ',digraph[dig[i]],',',sep='')
    print(' ',"'",dig[-1],"'",': ',digraph[dig[-1]],'}',sep='')
G_0=digraph_from_input()
G_1=square_G(G_0)
pprint(G_1)
